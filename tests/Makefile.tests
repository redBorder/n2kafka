include ../mklove/Makefile.base

CC ?= cc
TEST_PROGS := ${TEST_SRCS:%.c=%.test}
XML_FILES  := ${TEST_SRCS:%.c=%.test.xml} ${TEST_SRCS:%.c=%.test.mem.xml} \
	${TEST_SRCS:%.c=%.drd.xml} ${TEST_SRCS:%.c=%.test.helgrind.xml}
COV_FILES  := ${TEST_SRCS:%.c=%.gcda} ${TEST_SRCS:%.c=%.gcno}
CFLAGS += -g
CFLAGS += -fstack-protector -DFORTIFY_SOURCE=2 --param=ssp-buffer-size=4 -Wformat
CFLAGS += -Wall -Wfloat-equal -Wpointer-arith -O0 \
	-I$(TOPDIR) -I$(TOPDIR)/src

CPPFLAGS := $(filter-out -I. -I./src,$(CPPFLAGS))

LIBS += -lcmocka

VALGRIND_SUP = --suppressions=valgrind.suppressions

COVERAGE_INFO = coverage.info
COVERAGE_OUTPUT_DIRECTORY = out

.PHONY = coverage
.PRECIOUS = $(TEST_PROGS)

# Profiling
#CFLAGS += -O0 -pg
#LDFLAGS += -pg

all: test

%.test: %.c %.objdeps
	@printf "\033[1m\033[33mBuilding $@\033[1m\033[0m\n"
	@$(CC) $(CFLAGS) $(CPPFLAGS) $< `cat $(subst .c,.objdeps,$<)` -o $@ $(LDFLAGS) $(LIBS)

coverage: test
	@lcov --gcov-tool=gcov -q \
		--rc lcov_branch_coverage=1 --capture \
		--directory ../ --output-file ${COVERAGE_INFO}
	@genhtml --branch-coverage ${COVERAGE_INFO} --output-directory ${COVERAGE_OUTPUT_DIRECTORY} > coverage.out
	@./display_coverage.sh

test: $(TEST_PROGS)
	@./run_tests.sh

clean:
	rm -f $(TEST_PROGS) $(XML_FILES) $(COV_FILES) $(COVERAGE_INFO)
	rm -rf $(COVERAGE_OUTPUT_DIRECTORY)
